services:
  users_db:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: chatAppPass
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - users-db-data:/var/lib/postgresql/data
      - ./.init-scripts/init-users-db.sql:/docker-entrypoint-initdb.d/init-users-db.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=redisPass
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    command:
      [
        "redis-server",
        "--appendonly",
        "no",
        "--maxmemory",
        "500mb",
        "--maxmemory-policy",
        "allkeys-lru",
      ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  users_server:
    build:
      context: .
      dockerfile: users_server.Dockerfile
    ports:
      - "50051:50051"
    environment:
      DB_HOST: users_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: chatAppPass
      DB_NAME: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redisPass
    depends_on:
      users_db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 1s
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "chat:1:1"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 1s
      interval: 1s
      timeout: 1s
      retries: 5

  chat_db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: chatAppPass
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - chat-db-data:/var/lib/postgresql/data
      - ./.init-scripts/init-chat-db.sql:/docker-entrypoint-initdb.d/init-chat-db.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 1s

  chat_server:
    build:
      context: .
      dockerfile: chat_server.Dockerfile
    environment:
      DB_HOST: chat_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: chatAppPass
      DB_NAME: postgres
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      chat_db:
        condition: service_healthy
volumes:
  chat-db-data:
  users-db-data:
